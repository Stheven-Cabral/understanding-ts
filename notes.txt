Core Types
(number): All numbers, no differentiation between integers and floats, i.e. 1, 5.3, -10
(string): 'Hi', `Hi`, "Hi"
(boolean): true or false
(object) : {kay: value}
          - The object type has the following syntax which can be viewed when hovering over an object {key: value-type; key: value.type} . As you can see, semicolons are used instead of commas.

(arrays): [1, 2, 3]  - Can be flexible or strict (regarding the element types).
                    - Typescript descibes arrays as 'string[]' .

TS Core Types
(tuple): [1, 2] - Fixed length arrays.
(enum): enum{NEW, OLD}  - Creating custome identifier number relationships. (View enums.js)
(any): *  - Any kind of value, no specific type assignment.

Type Inference
(type inference) - Typscript is able to infer the type of a constant or variable (let or var) based on the value.
  - For example const num = 5; will have a type of '5' because it is constant.
  - For example let num = 5; will have a type of 'number' because it is a variable.
